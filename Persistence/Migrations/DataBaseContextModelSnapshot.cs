// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InvoiceNo")
                        .HasColumnType("int");

                    b.Property<int>("bbc")
                        .HasColumnType("int");

                    b.Property<string>("bid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bpc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("inp")
                        .HasColumnType("int");

                    b.Property<int>("ins")
                        .HasColumnType("int");

                    b.Property<int>("inty")
                        .HasColumnType("int");

                    b.Property<int>("sbc")
                        .HasColumnType("int");

                    b.Property<double>("tax17")
                        .HasColumnType("float");

                    b.Property<int>("top")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("Domain.InvoiceDet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BoorsDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoorsNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("am")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bsrn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("dis")
                        .HasColumnType("float");

                    b.Property<string>("exr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("odam")
                        .HasColumnType("float");

                    b.Property<double>("odr")
                        .HasColumnType("float");

                    b.Property<string>("odt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("olam")
                        .HasColumnType("float");

                    b.Property<double>("olr")
                        .HasColumnType("float");

                    b.Property<string>("olt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sstid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sstt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("vam")
                        .HasColumnType("float");

                    b.Property<double>("vra")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceDet");
                });

            modelBuilder.Entity("Domain.InvoicePay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InvoiceDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iinn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pcn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pmt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("pv")
                        .HasColumnType("float");

                    b.Property<string>("trmn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoicePay");
                });

            modelBuilder.Entity("Domain.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.InvoiceDet", b =>
                {
                    b.HasOne("Domain.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Domain.InvoicePay", b =>
                {
                    b.HasOne("Domain.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });
#pragma warning restore 612, 618
        }
    }
}
